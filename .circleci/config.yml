version: 2
jobs:
  build-job:
    docker:
      - image: circleci/node:8.11.1
        environment:
          PGHOST: localhost
          PGUSER: dev        
          NODE_ENV: test
          TZ: "/usr/share/zoneinfo/America/Detroit"  
    steps:
      - checkout
      - run:
          name: Update Repositories
          command: sudo apt-get update
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-{{ .Branch }}
            - yarn-packages-master
            - yarn-packages-
      - run:
          name: Install Dependencies
          command: yarn
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/
      - run:
          name: Build
          command: yarn build
  deploy-test:
    docker:
      - image: circleci/node:8.11.1
    steps:
      - checkout
      - run:
          name: Setup Heroku
          command: |
            bash .circleci/setup-heroku.sh
            heroku config:set GIT_HASH=`git rev-parse --short HEAD` --app personal-site-dev
            heroku config:set GIT_BRANCH=`git rev-parse --abbrev-ref HEAD` --app personal-site-dev
      - run:
          name: Deploy
          command: git push --force git@heroku.com:personal-site-dev.git $CIRCLE_SHA1:refs/heads/master

  deploy-prod:
    docker:
      - image: circleci/node:8.11.1
    steps:
      - checkout
      - run:
          name: Setup Heroku
          command: |
            bash .circleci/setup-heroku.sh
            heroku config:set GIT_HASH=`git rev-parse --short HEAD` --app personal-site-prod
            heroku config:set GIT_BRANCH=`git rev-parse --abbrev-ref HEAD` --app personal-site-prod
      - run:
          name: Deploy
          command: git push --force git@heroku.com:personal-site-prod.git $CIRCLE_SHA1:refs/heads/master        

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-job
      - deploy-test:
          requires:
            - build-job
          filters:
            branches:
              only: develop
      - deploy-prod:
          requires:
            - build-job
          filters:
            branches:
              only: master
